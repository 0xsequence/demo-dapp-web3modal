{"version":3,"file":"static/js/495.38c898b1.chunk.js","mappings":"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","sources":["../../../../../../modal-core/src/controllers/RouterCtrl.ts","../../../../../../modal-core/src/utils/CoreUtil.ts","../../../../../../modal-core/src/controllers/EventsCtrl.ts","../../../../../../modal-core/src/controllers/OptionsCtrl.ts","../../../../../../modal-core/src/controllers/ConfigCtrl.ts","../../../../../../modal-core/src/utils/ExplorerUtil.ts","../../../../../../modal-core/src/controllers/ExplorerCtrl.ts","../../../../../../modal-core/src/controllers/ModalCtrl.ts","../../../../../../modal-core/src/controllers/ThemeCtrl.ts","../../../../../../modal-core/src/controllers/ToastCtrl.ts","../../../../../../modal-core/src/utils/PolyfillUtil.ts","../../../../../../modal/src/client.ts"],"sourcesContent":["import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { RouterCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<RouterCtrlState>({\n  history: ['ConnectWallet'],\n  view: 'ConnectWallet',\n  data: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const RouterCtrl = {\n  state,\n\n  subscribe(callback: (newState: RouterCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  push(view: RouterCtrlState['view'], data?: RouterCtrlState['data']) {\n    if (view !== state.view) {\n      state.view = view\n      if (data) {\n        state.data = data\n      }\n      state.history.push(view)\n    }\n  },\n\n  reset(view: RouterCtrlState['view']) {\n    state.view = view\n    state.history = [view]\n  },\n\n  replace(view: RouterCtrlState['view']) {\n    if (state.history.length > 1) {\n      state.history[state.history.length - 1] = view\n      state.view = view\n    }\n  },\n\n  goBack() {\n    if (state.history.length > 1) {\n      state.history.pop()\n      const [last] = state.history.slice(-1)\n      state.view = last\n    }\n  },\n\n  setData(data: RouterCtrlState['data']) {\n    state.data = data\n  }\n}\n","import { RouterCtrl } from '../controllers/RouterCtrl'\n\nexport const CoreUtil = {\n  WALLETCONNECT_DEEPLINK_CHOICE: 'WALLETCONNECT_DEEPLINK_CHOICE',\n\n  WCM_VERSION: 'WCM_VERSION',\n\n  RECOMMENDED_WALLET_AMOUNT: 9,\n\n  isMobile() {\n    if (typeof window !== 'undefined') {\n      return Boolean(\n        window.matchMedia('(pointer:coarse)').matches ||\n          /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)\n      )\n    }\n\n    return false\n  },\n\n  isAndroid() {\n    return CoreUtil.isMobile() && navigator.userAgent.toLowerCase().includes('android')\n  },\n\n  isIos() {\n    const ua = navigator.userAgent.toLowerCase()\n\n    return CoreUtil.isMobile() && (ua.includes('iphone') || ua.includes('ipad'))\n  },\n\n  isHttpUrl(url: string) {\n    return url.startsWith('http://') || url.startsWith('https://')\n  },\n\n  isArray<T>(data?: T | T[]): data is T[] {\n    return Array.isArray(data) && data.length > 0\n  },\n\n  formatNativeUrl(appUrl: string, wcUri: string, name: string): string {\n    if (CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatUniversalUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.includes('://')) {\n      safeAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '')\n      safeAppUrl = `${safeAppUrl}://`\n    }\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  formatUniversalUrl(appUrl: string, wcUri: string, name: string): string {\n    if (!CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatNativeUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds)\n    })\n  },\n\n  openHref(href: string, target: '_blank' | '_self') {\n    window.open(href, target, 'noreferrer noopener')\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({ href, name }))\n  },\n\n  setWalletConnectAndroidDeepLink(wcUri: string) {\n    const [href] = wcUri.split('?')\n\n    localStorage.setItem(\n      CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE,\n      JSON.stringify({ href, name: 'Android' })\n    )\n  },\n\n  removeWalletConnectDeepLink() {\n    localStorage.removeItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE)\n  },\n\n  setModalVersionInStorage() {\n    if (typeof localStorage !== 'undefined') {\n      localStorage.setItem(CoreUtil.WCM_VERSION, process.env.ROLLUP_WCM_VERSION ?? 'UNKNOWN')\n    }\n  },\n\n  getWalletRouterData() {\n    const routerData = RouterCtrl.state.data?.Wallet\n    if (!routerData) {\n      throw new Error('Missing \"Wallet\" view data')\n    }\n\n    return routerData\n  }\n}\n","import { proxy, snapshot, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { EventsCtrlState, ModalEvent, ModalEventData } from '../types/controllerTypes'\n\n// -- helpers ------------------------------------------------------ //\nconst isEnabled =\n  typeof location !== 'undefined' &&\n  (location.hostname.includes('localhost') || location.protocol.includes('https'))\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<EventsCtrlState>({\n  enabled: isEnabled,\n  userSessionId: '',\n  events: [],\n  connectedWalletId: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const EventsCtrl = {\n  state,\n\n  subscribe(callback: (newEvent: ModalEvent) => void) {\n    return valtioSub(state.events, () => callback(snapshot(state.events[state.events.length - 1])))\n  },\n\n  initialize() {\n    if (state.enabled && typeof crypto?.randomUUID !== 'undefined') {\n      state.userSessionId = crypto.randomUUID()\n    }\n  },\n\n  setConnectedWalletId(connectedWalletId: EventsCtrlState['connectedWalletId']) {\n    state.connectedWalletId = connectedWalletId\n  },\n\n  click(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'CLICK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  track(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'TRACK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  view(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'VIEW' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { OptionsCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<OptionsCtrlState>({\n  chains: undefined,\n  walletConnectUri: undefined,\n  isAuth: false,\n  isCustomDesktop: false,\n  isCustomMobile: false,\n  isDataLoaded: false,\n  isUiLoaded: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const OptionsCtrl = {\n  state,\n\n  subscribe(callback: (newState: OptionsCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setChains(chains: OptionsCtrlState['chains']) {\n    state.chains = chains\n  },\n\n  setWalletConnectUri(walletConnectUri: OptionsCtrlState['walletConnectUri']) {\n    state.walletConnectUri = walletConnectUri\n  },\n\n  setIsCustomDesktop(isCustomDesktop: OptionsCtrlState['isCustomDesktop']) {\n    state.isCustomDesktop = isCustomDesktop\n  },\n\n  setIsCustomMobile(isCustomMobile: OptionsCtrlState['isCustomMobile']) {\n    state.isCustomMobile = isCustomMobile\n  },\n\n  setIsDataLoaded(isDataLoaded: OptionsCtrlState['isDataLoaded']) {\n    state.isDataLoaded = isDataLoaded\n  },\n\n  setIsUiLoaded(isUiLoaded: OptionsCtrlState['isUiLoaded']) {\n    state.isUiLoaded = isUiLoaded\n  },\n\n  setIsAuth(isAuth: OptionsCtrlState['isAuth']) {\n    state.isAuth = isAuth\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConfigCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { EventsCtrl } from './EventsCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst state = proxy<ConfigCtrlState>({\n  projectId: '',\n  mobileWallets: undefined,\n  desktopWallets: undefined,\n  walletImages: undefined,\n  chains: undefined,\n  enableAuthMode: false,\n  enableExplorer: true,\n  explorerExcludedWalletIds: undefined,\n  explorerRecommendedWalletIds: undefined,\n  termsOfServiceUrl: undefined,\n  privacyPolicyUrl: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConfigCtrl = {\n  state,\n\n  subscribe(callback: (newState: ConfigCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setConfig(config: ConfigCtrlState) {\n    EventsCtrl.initialize()\n    OptionsCtrl.setChains(config.chains)\n    OptionsCtrl.setIsAuth(Boolean(config.enableAuthMode))\n    OptionsCtrl.setIsCustomMobile(Boolean(config.mobileWallets?.length))\n    OptionsCtrl.setIsCustomDesktop(Boolean(config.desktopWallets?.length))\n\n    CoreUtil.setModalVersionInStorage()\n\n    Object.assign(state, config)\n  }\n}\n","import { ConfigCtrl } from '../controllers/ConfigCtrl'\nimport type { ListingParams, ListingResponse } from '../types/controllerTypes'\n\n// -- Helpers -------------------------------------------------------\nconst W3M_API = 'https://explorer-api.walletconnect.com'\n\nasync function fetchListings(endpoint: string, params: ListingParams) {\n  const url = new URL(endpoint, W3M_API)\n  url.searchParams.append('projectId', ConfigCtrl.state.projectId)\n  Object.entries(params).forEach(([key, value]) => {\n    if (value) {\n      url.searchParams.append(key, String(value))\n    }\n  })\n  const request = await fetch(url)\n\n  return request.json() as Promise<ListingResponse>\n}\n\n// -- Utility -------------------------------------------------------\nexport const ExplorerUtil = {\n  async getDesktopListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getDesktopListings', params)\n  },\n\n  async getMobileListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getMobileListings', params)\n  },\n\n  async getInjectedListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getInjectedListings', params)\n  },\n\n  async getAllListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getAllListings', params)\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getWalletImage/${imageId}?projectId=${ConfigCtrl.state.projectId}`\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getAssetImage/${imageId}?projectId=${ConfigCtrl.state.projectId}`\n  }\n}\n","import { proxy } from 'valtio/vanilla'\nimport type { ExplorerCtrlState, ListingParams } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { ExplorerUtil } from '../utils/ExplorerUtil'\nimport { ConfigCtrl } from './ConfigCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst isMobile = CoreUtil.isMobile()\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ExplorerCtrlState>({\n  wallets: { listings: [], total: 0, page: 1 },\n  search: { listings: [], total: 0, page: 1 },\n  recomendedWallets: []\n})\n\n// -- controller --------------------------------------------------- //\nexport const ExplorerCtrl = {\n  state,\n\n  async getRecomendedWallets() {\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n\n    // Don't fetch recomended wallets\n    if (\n      explorerRecommendedWalletIds === 'NONE' ||\n      (explorerExcludedWalletIds === 'ALL' && !explorerRecommendedWalletIds)\n    ) {\n      return state.recomendedWallets\n    }\n\n    // Fetch only recomended wallets defined in config\n    if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      const recommendedIds = explorerRecommendedWalletIds.join(',')\n      const params = { recommendedIds }\n      const { listings } = await ExplorerUtil.getAllListings(params)\n      const listingsArr = Object.values(listings)\n      listingsArr.sort((a, b) => {\n        const aIndex = explorerRecommendedWalletIds.indexOf(a.id)\n        const bIndex = explorerRecommendedWalletIds.indexOf(b.id)\n\n        return aIndex - bIndex\n      })\n      state.recomendedWallets = listingsArr\n    }\n\n    // Fetch default recomended wallets based on user's device, options and excluded config\n    else {\n      const { chains, isAuth } = OptionsCtrl.state\n      const chainsFilter = chains?.join(',')\n      const isExcluded = CoreUtil.isArray(explorerExcludedWalletIds)\n      const params = {\n        page: 1,\n        sdks: isAuth ? 'auth_v1' : undefined,\n        entries: CoreUtil.RECOMMENDED_WALLET_AMOUNT,\n        chains: chainsFilter,\n        version: 2,\n        excludedIds: isExcluded ? explorerExcludedWalletIds.join(',') : undefined\n      }\n      const { listings } = isMobile\n        ? await ExplorerUtil.getMobileListings(params)\n        : await ExplorerUtil.getDesktopListings(params)\n      state.recomendedWallets = Object.values(listings)\n    }\n\n    return state.recomendedWallets\n  },\n\n  async getWallets(params: ListingParams) {\n    const extendedParams: ListingParams = { ...params }\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n    const { recomendedWallets } = state\n\n    // Don't fetch any wallets if all are excluded\n    if (explorerExcludedWalletIds === 'ALL') {\n      return state.wallets\n    }\n\n    // Don't fetch recomended wallets, as we already have these\n    if (!extendedParams.search) {\n      if (recomendedWallets.length) {\n        extendedParams.excludedIds = recomendedWallets.map(wallet => wallet.id).join(',')\n      } else if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n        extendedParams.excludedIds = explorerRecommendedWalletIds.join(',')\n      }\n    }\n\n    // Don't fetch user defined excluded wallets & recomended wallets\n    if (CoreUtil.isArray(explorerExcludedWalletIds)) {\n      extendedParams.excludedIds = [extendedParams.excludedIds, explorerExcludedWalletIds]\n        .filter(Boolean)\n        .join(',')\n    }\n\n    // Fetch only auth wallets\n    if (OptionsCtrl.state.isAuth) {\n      extendedParams.sdks = 'auth_v1'\n    }\n\n    const { page, search } = params\n    const { listings: listingsObj, total } = isMobile\n      ? await ExplorerUtil.getMobileListings(extendedParams)\n      : await ExplorerUtil.getDesktopListings(extendedParams)\n    const listings = Object.values(listingsObj)\n    const type = search ? 'search' : 'wallets'\n    state[type] = {\n      listings: [...state[type].listings, ...listings],\n      total,\n      page: page ?? 1\n    }\n\n    return { listings, total }\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return ExplorerUtil.getWalletImageUrl(imageId)\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return ExplorerUtil.getAssetImageUrl(imageId)\n  },\n\n  resetSearch() {\n    state.search = { listings: [], total: 0, page: 1 }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ModalCtrlState } from '../types/controllerTypes'\nimport { OptionsCtrl } from './OptionsCtrl'\nimport { RouterCtrl } from './RouterCtrl'\n\n// -- types -------------------------------------------------------- //\nexport interface OpenOptions {\n  uri: string\n  chains?: string[]\n}\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ModalCtrlState>({\n  open: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const ModalCtrl = {\n  state,\n\n  subscribe(callback: (newState: ModalCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  async open(options?: OpenOptions) {\n    return new Promise<void>(resolve => {\n      const { isUiLoaded, isDataLoaded } = OptionsCtrl.state\n\n      OptionsCtrl.setWalletConnectUri(options?.uri)\n      OptionsCtrl.setChains(options?.chains)\n      RouterCtrl.reset('ConnectWallet')\n\n      // Open modal if essential async data is ready\n      if (isUiLoaded && isDataLoaded) {\n        state.open = true\n        resolve()\n      }\n      // Otherwise (slow network) re-attempt open checks\n      else {\n        const interval = setInterval(() => {\n          const opts = OptionsCtrl.state\n          if (opts.isUiLoaded && opts.isDataLoaded) {\n            clearInterval(interval)\n            state.open = true\n            resolve()\n          }\n        }, 200)\n      }\n    })\n  },\n\n  close() {\n    state.open = false\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ThemeCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nfunction isDarkMode() {\n  return typeof matchMedia !== 'undefined' && matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst state = proxy<ThemeCtrlState>({\n  themeMode: isDarkMode() ? 'dark' : 'light'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ThemeCtrl = {\n  state,\n\n  subscribe(callback: (newState: ThemeCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setThemeConfig(theme: ThemeCtrlState) {\n    const { themeMode, themeVariables } = theme\n\n    if (themeMode) {\n      state.themeMode = themeMode\n    }\n\n    if (themeVariables) {\n      state.themeVariables = { ...themeVariables }\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ToastCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ToastCtrlState>({\n  open: false,\n  message: '',\n  variant: 'success'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ToastCtrl = {\n  state,\n\n  subscribe(callback: (newState: ToastCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openToast(message: ToastCtrlState['message'], variant: ToastCtrlState['variant']) {\n    state.open = true\n    state.message = message\n    state.variant = variant\n  },\n\n  closeToast() {\n    state.open = false\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unnecessary-condition */\nimport { Buffer } from 'buffer'\n\nif (typeof window !== 'undefined') {\n  if (!window.Buffer) {\n    window.Buffer = Buffer\n  }\n  if (!window.global) {\n    window.global = window\n  }\n  if (!window.process) {\n    // @ts-expect-error minimal process\n    window.process = { env: {} }\n  }\n  if (!window.global) {\n    window.global = window\n  }\n}\n","import type { ConfigCtrlState, ThemeCtrlState } from '@walletconnect/modal-core'\nimport { ConfigCtrl, ModalCtrl, OptionsCtrl, ThemeCtrl } from '@walletconnect/modal-core'\n\n/**\n * Types\n */\nexport type WalletConnectModalConfig = ConfigCtrlState & ThemeCtrlState\n\n/**\n * Client\n */\nexport class WalletConnectModal {\n  public constructor(config: WalletConnectModalConfig) {\n    ThemeCtrl.setThemeConfig(config)\n    ConfigCtrl.setConfig(config)\n    this.initUi()\n  }\n\n  private async initUi() {\n    if (typeof window !== 'undefined') {\n      await import('@walletconnect/modal-ui')\n      const modal = document.createElement('wcm-modal')\n      document.body.insertAdjacentElement('beforeend', modal)\n      OptionsCtrl.setIsUiLoaded(true)\n    }\n  }\n\n  public openModal = ModalCtrl.open\n\n  public closeModal = ModalCtrl.close\n\n  public subscribeModal = ModalCtrl.subscribe\n\n  public setTheme = ThemeCtrl.setThemeConfig\n}\n"],"names":["state","proxy","history","view","data","RouterCtrl","subscribe","callback","valtioSub","push","reset","replace","length","goBack","pop","slice","last","setData","CoreUtil","WALLETCONNECT_DEEPLINK_CHOICE","WCM_VERSION","RECOMMENDED_WALLET_AMOUNT","isMobile","window","Boolean","matchMedia","matches","test","navigator","userAgent","isAndroid","toLowerCase","includes","isIos","ua","isHttpUrl","url","startsWith","isArray","Array","formatNativeUrl","appUrl","wcUri","name","this","formatUniversalUrl","safeAppUrl","replaceAll","endsWith","setWalletConnectDeepLink","encodedWcUrl","encodeURIComponent","wait","miliseconds","Promise","resolve","setTimeout","openHref","href","target","open","localStorage","setItem","JSON","stringify","setWalletConnectAndroidDeepLink","split","removeWalletConnectDeepLink","removeItem","setModalVersionInStorage","getWalletRouterData","routerData","_a","Wallet","Error","isEnabled","location","hostname","protocol","enabled","userSessionId","events","connectedWalletId","EventsCtrl","snapshot","initialize","crypto","randomUUID","setConnectedWalletId","click","event","type","timestamp","Date","now","track","chains","walletConnectUri","isAuth","isCustomDesktop","isCustomMobile","isDataLoaded","isUiLoaded","OptionsCtrl","setChains","setWalletConnectUri","setIsCustomDesktop","setIsCustomMobile","setIsDataLoaded","setIsUiLoaded","setIsAuth","projectId","mobileWallets","desktopWallets","walletImages","enableAuthMode","enableExplorer","explorerExcludedWalletIds","explorerRecommendedWalletIds","termsOfServiceUrl","privacyPolicyUrl","ConfigCtrl","setConfig","config","_b","Object","assign","W3M_API","fetchListings","endpoint","params","URL","searchParams","append","entries","forEach","key","value","String","fetch","json","imageId","enumerable","configurable","writable","E","y","wallets","listings","total","page","search","recomendedWallets","ExplorerCtrl","getRecomendedWallets","recommendedIds","join","ExplorerUtil","listingsArr","values","sort","a","b","indexOf","id","chainsFilter","isExcluded","sdks","version","excludedIds","getWallets","extendedParams","__spreadValues","map","wallet","filter","listingsObj","getWalletImageUrl","getAssetImageUrl","resetSearch","ModalCtrl","options","uri","interval","setInterval","opts","clearInterval","close","themeMode","ThemeCtrl","setThemeConfig","theme","themeVariables","h","c","message","variant","ToastCtrl","openToast","closeToast","Buffer","global","process","env","WalletConnectModal","openModal","closeModal","subscribeModal","setTheme","initUi","modal","document","createElement","body","insertAdjacentElement"],"sourceRoot":""}